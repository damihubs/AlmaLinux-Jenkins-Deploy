name: AlmaLinux VM Deployment with Jenkins Setup

on:
  push:
    branches:
      - main

jobs:
  create-resource-group:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v2

    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    # Step 1: Create Resource Group
    - name: Create Resource Group
      run: |
        echo "Attempting to create resource group divergenceRG2..."
        az group create --name divergenceRG2 --location eastus
        echo "Resource group created successfully."

    # Step 2: Verify Resource Group Exists (immediate check)
    - name: Verify Resource Group Exists Immediately
      run: |
        rg_exists=$(az group exists --name divergenceRG2)
        if [ "$rg_exists" = true ]; then
          echo "Resource Group divergenceRG2 exists and verified."
        else
          echo "Resource Group divergenceRG2 does not exist, stopping the workflow."
          exit 1
        fi

  deploy:
    runs-on: ubuntu-latest
    needs: create-resource-group

    steps:
    - name: Checkout Code
      uses: actions/checkout@v2

    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    # Step 3: Generate SSH Keys (manually generate SSH keys)
    - name: Generate SSH Keys
      run: |
        ssh-keygen -t rsa -b 2048 -f ~/.ssh/id_rsa -N ""

    # Step 4: Create Networking Components (Virtual Network, Subnet, NSG, Public IP, NIC)
    - name: Create Virtual Network and Subnet
      run: |
        az network vnet create --resource-group divergenceRG2 --name AlmaLinuxVNet --subnet-name AlmaLinuxSubnet --location eastus

    - name: Create Network Security Group (NSG)
      run: |
        az network nsg create --resource-group divergenceRG2 --name AlmaLinuxNSG --location eastus

    - name: Create Public IP
      run: |
        az network public-ip create --resource-group divergenceRG2 --name AlmaLinuxPublicIP --allocation-method Static --location eastus

    - name: Create Network Interface (NIC)
      run: |
        az network nic create --resource-group divergenceRG2 --name AlmaLinuxNIC --vnet-name AlmaLinuxVNet --subnet AlmaLinuxSubnet --network-security-group AlmaLinuxNSG --public-ip-address AlmaLinuxPublicIP

    # Step 5: Create AlmaLinux VM with the Public IP attached, ensure the image URN is valid
    - name: Create AlmaLinux VM
      run: |
        image_urn=${{ steps.image-search.outputs.image-urn }}
        if [ -z "$image_urn" ]; then
          echo "Image URN is empty. Stopping the workflow."
          exit 1
        fi
        az vm create \
          --resource-group divergenceRG2 \
          --name AlmaLinuxVM \
          --image "$image_urn" \
          --admin-username azureuser \
          --nics AlmaLinuxNIC \
          --ssh-key-values ~/.ssh/id_rsa.pub \
          --generate-ssh-keys

    # Step 6: Wait for VM and Public IP Assignment
    - name: Wait for VM and Public IP Assignment
      run: |
        echo "Waiting for 120 seconds to allow the VM to fully initialize..."
        sleep 120

    # Step 7: Retrieve Public IP Address
    - name: Retrieve Public IP Address
      run: |
        public_ip=$(az network public-ip show --resource-group divergenceRG2 --name AlmaLinuxPublicIP --query ipAddress -o tsv)
        if [ -z "$public_ip" ]; then
          echo "Public IP not assigned yet."
          exit 1
        else
          echo "Public IP: $public_ip"
          echo "public_ip=$public_ip" >> $GITHUB_ENV
        fi

    # Step 8: Install Jenkins on the AlmaLinux VM using SSH
    - name: Install Jenkins on AlmaLinux VM
      run: |
        ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa azureuser@${{ env.public_ip }} <<EOF
        sudo yum update -y
        sudo yum install -y java-11-openjdk
        sudo wget -O /etc/yum.repos.d/jenkins.repo https://pkg.jenkins.io/redhat-stable/jenkins.repo
        sudo rpm --import https://pkg.jenkins.io/redhat-stable/jenkins.io.key
        sudo yum install -y jenkins
        sudo systemctl enable jenkins
        sudo systemctl start jenkins
        EOF

    # Step 9: Open Ports in NSG for HTTP, Jenkins, and SSH
    - name: Open Ports in NSG for HTTP and Jenkins
      run: |
        az network nsg rule create \
          --resource-group divergenceRG2 \
          --nsg-name AlmaLinuxNSG \
          --name AllowHTTP \
          --protocol tcp \
          --priority 1001 \
          --destination-port-ranges 80 \
          --access allow

    - name: Open Ports in NSG for Jenkins
      run: |
        az network nsg rule create \
          --resource-group divergenceRG2 \
          --nsg-name AlmaLinuxNSG \
          --name AllowJenkins \
          --protocol tcp \
          --priority 1002 \
          --destination-port-ranges 8080 \
          --access allow

    - name: Open Ports in NSG for SSH
      run: |
        az network nsg rule create \
          --resource-group divergenceRG2 \
          --nsg-name AlmaLinuxNSG \
          --name AllowSSH \
          --protocol tcp \
          --priority 1003 \
          --destination-port-ranges 22 \
          --access allow

    # Step 10: Cleanup on failure
    - name: Cleanup on Failure
      if: failure()
      run: |
        if az group exists --name divergenceRG2; then
          echo "Cleaning up resources due to failure..."
          az group delete --name divergenceRG2 --yes --no-wait
        else
          echo "No resource group found for cleanup."
        fi
